<?php

/**
 * This is the model base class for the table "{{service}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Service".
 *
 * Columns in table "{{service}}" available as properties of the model,
 * followed by relations of table "{{service}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $email
 * @property integer $phone
 * @property string $address
 *
 * @property mixed $tblCarBrands
 */
abstract class BaseService extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{service}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Service|Services', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, email', 'required'),
			array('phone', 'numerical', 'integerOnly'=>true),
			array('title, email', 'length', 'max'=>200),
			array('address', 'safe'),
			array('phone, address', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, email, phone, address', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tblCarBrands' => array(self::MANY_MANY, 'CarBrand', '{{car_brand_to_service}}(service_id, car_brand_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'tblCarBrands' => 'CarBrandToService',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'email' => Yii::t('app', 'Email'),
			'phone' => Yii::t('app', 'Phone'),
			'address' => Yii::t('app', 'Address'),
			'tblCarBrands' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('phone', $this->phone);
		$criteria->compare('address', $this->address, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}