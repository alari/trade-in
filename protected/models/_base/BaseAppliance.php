<?php

/**
 * This is the model base class for the table "{{appliance}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Appliance".
 *
 * Columns in table "{{appliance}}" available as properties of the model,
 * followed by relations of table "{{appliance}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $email
 * @property string $hash
 * @property integer $car_brand_id
 * @property string $car_model
 *
 * @property CarBrand $carBrand
 */
abstract class BaseAppliance extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{appliance}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Appliance|Appliances', $n);
	}

	public static function representingColumn() {
		return 'email';
	}

	public function rules() {
		return array(
			array('email', 'required'),
			array('car_brand_id', 'numerical', 'integerOnly'=>true),
			array('email', 'length', 'max'=>200),
			array('hash', 'length', 'max'=>64),
			array('car_model', 'length', 'max'=>60),
			array('hash, car_brand_id, car_model', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, email, hash, car_brand_id, car_model', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'carBrand' => array(self::BELONGS_TO, 'CarBrand', 'car_brand_id'),
            'negotiations' => array(self::HAS_MANY, 'Negotiation', 'appliance_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'email' => Yii::t('app', 'Email'),
			'hash' => Yii::t('app', 'Hash'),
			'car_brand_id' => null,
			'car_model' => Yii::t('app', 'Car Model'),
			'carBrand' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('hash', $this->hash, true);
		$criteria->compare('car_brand_id', $this->car_brand_id);
		$criteria->compare('car_model', $this->car_model, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}